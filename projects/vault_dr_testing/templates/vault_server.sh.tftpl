#!/bin/sh

## Get instance IP from cloud-init (replace with VM IP when appropriate)
INSTANCE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
CONSUL_HTTP_TOKEN="${consul_token}"

## Install keys, repos and packages
wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor > /etc/apt/trusted.gpg.d/hashicorp.gpg
chmod go-w /etc/apt/trusted.gpg.d/hashicorp.gpg
chmod ugo+r /etc/apt/trusted.gpg.d/hashicorp.gpg
apt-add-repository -y "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
apt update && apt install -y unzip consul vault-enterprise consul-template jq net-tools

# Configure Consul and start it up
cat <<EOT > /etc/consul.d/consul.hcl
datacenter = "${datacenter}"
data_dir = "/opt/consul"
log_level = "INFO"
server = false
advertise_addr = "$${INSTANCE_IP}"
bind_addr = "{{ GetDefaultInterfaces | exclude \"type\" \"IPv6\" | attr \"address\" }}"
client_addr = "0.0.0.0"
ui = true

telemetry {
  prometheus_retention_time = "10m"
  disable_hostname = true
}

acl {
  enabled = true
  default_policy = "deny"
  enable_token_persistence = true
  tokens {
    initial_management = "$${CONSUL_HTTP_TOKEN}"
    agent = "$${CONSUL_HTTP_TOKEN}"
  }
}

retry_join = ["provider=aws tag_key=role tag_value=consul-server"]
EOT

systemctl daemon-reload
systemctl enable consul --now

## Configure Consul DNS 
mkdir -p /etc/systemd/resolved.conf.d/
cat <<EOT > /etc/systemd/resolved.conf.d/consul.conf
[Resolve]
DNS=127.0.0.1:8600
DNSSEC=false
Domains=~consul
EOT

systemctl restart systemd-resolved
export CONSUL_HTTP_TOKEN=$${CONSUL_HTTP_TOKEN}
echo CONSUL_HTTP_TOKEN=$${CONSUL_HTTP_TOKEN} >> /etc/environment


# Setup Vault
export VAULT_ADDR=http://127.0.0.1:8200
echo "export VAULT_ADDR=http://127.0.0.1:8200" >> /etc/environment

echo "Writing Vault license"
echo "VAULT_LICENSE=${vault_ent_license}" >> /etc/vault.d/vault.env

cat <<EOT > /etc/vault.d/vault.hcl
ui            = true
cluster_addr  = "http://$${INSTANCE_IP}:8201"
api_addr      = "http://$${INSTANCE_IP}:8200"
disable_mlock = true

storage "raft" {
  path = "/opt/vault"
  node_id = "${cluster_role}"

  retry_join {
    auto_join = "provider=aws region=eu-west-1 tag_key=role tag_value=${role}"
  }  
}

cluster_addr = "http://$${INSTANCE_IP}:8201"

listener "tcp" {
  address       = "0.0.0.0:8200"
  tls_disable   = true
}

service_registration "consul" {
  address = "127.0.0.1:8500"
  token   = "${consul_token}"
}

replication {
  resolver_discover_servers = true
  logshipper_buffer_length = 1000
  logshipper_buffer_size = "5gb"
  allow_forwarding_via_header = false
  best_effort_wal_wait_duration = "2s"
}
EOT

systemctl enable vault --now 
sleep 5 # Give vault time to start up

init_output=$(vault operator init -key-shares=1 -key-threshold=1 -format json)
echo $init_output > /root/vault_init.json

export VAULT_TOKEN=$(jq -r .root_token < /root/vault_init.json)
vault operator unseal $(jq -r .unseal_keys_b64[0] < /root/vault_init.json)

sleep 5
## Primary instance setup
if [ $cluster_role = "primary" ]
then
  vault secrets enable kv
  vault kv put kv/my_secret foo=bar
  vault write -f sys/replication/dr/primary/enable
fi

## Still need to generate a token for the secondary
